swagger: "2.0"
info:
  version: 1.0.0
  title: Tidetech Data API
  description: |
    **Tidetech API Documentation**
    
    **Introduction**
    
    Tidetech's API can be used to download forecast and hindcast (historical) metocean data in a variety of formats. 
    Data can be requested by region and by single or multiple points.
    
    **Forecast Data**
    
    Forecast data may be queried for individual datasets only (multiple datasets cannot be combined in one query at present). 
    A catalogue of available datasets can be viewed here https://www.tidetech.org/data/
    
    Forecast data api requests are accessed at the endpoint **/dataset/**
    
    **Hindcast Data**
    
    Hindcast data may be queried for individual or multiple datasets (point data only), requests for a region of data can only be made for individual datasets.
    
    Hindcast data api requests are accessed at the endpoint **/data/**
    
    For example code, see our [GitHub repository](https://github.com/Tidetech/tidetech-api-examples).
  termsOfService: https://www.tidetech.org
  contact:
    name: Tidetech Support
    email: support@tidetech.org
    url: https://www.tidetech.org
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: api.tidetech.org
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
  - application/octet-stream
securityDefinitions:
  APIKey:
    type: apiKey
    description: |
      Use a URL parameter to pass in the API Key.
    name: api_key
    in: query
  APIHeader:
    type: apiKey
    description: |
      Alternately, use a header to include your API Key like this: `'Authentication': 'Token ' + API_KEY`
    name: Authentication
    in: header
paths:
  /dataset/:
    get:
      description: |
        Returns metadata for all forecast datasets that you have access to.
      security:
        - APIKey: []
      responses:
        200:
          description: dataset response
          schema:
            type: array
            items:
              $ref: '#/definitions/Dataset'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{name}/:
    get:
      description: |
        Returns metadata for a single forecast dataset.
      security:
        - APIKey: []
      parameters:
        - name: name
          in: path
          description: Name of dataset to get metadata for
          required: true
          type: string
      responses:
        200:
          description: dataset response
          schema:
            $ref: '#/definitions/Dataset'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{name}/data/:
    get:
      produces:
        - application/octet-stream
        - application/json
      description: |
        Download or subset a single forecast dataset in either GRIB or NetCDF format. 
        
        *Caution, don't test this in the docs, as it returns large files.*
        
        In order to test, you can copy and paste the URL into a browser, or use a command line tool like Curl.
        
        Downloading a zipped dataset without subsetting will redirect to a S3 time-limited URL. You can stop this behaviour with the `no_redirect` parameter.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/Name"
        - $ref: "#/parameters/FileFormat"
        - $ref: "#/parameters/Zipped"
        - $ref: "#/parameters/TimeFrom"
        - $ref: "#/parameters/TimeTo"
        - $ref: "#/parameters/TimeSteps"
        - $ref: "#/parameters/Codes"
        - $ref: "#/parameters/FileName"
        - $ref: "#/parameters/NoRedirect"
        - $ref: "#/parameters/BoundsString"
      responses:
        200:
          description: File download
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dataset/{name}/point/:
    get:
      produces:
        - application/json
      description: |
        Download forecast dataset at one or more points.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/LocationsString"
      responses:
        200:
          description: File download
          schema:
            $ref: '#/definitions/PointFeatureCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      produces:
        - application/json
      description: |
        Download forecast dataset at one or more points.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/LocationsString"
      responses:
        200:
          description: File download
          schema:
            $ref: '#/definitions/PointFeatureCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: "#/parameters/Name"
      - $ref: "#/parameters/Zipped"
  /group/:
    get:
      description: |
        Returns all forecast dataset groups that you have access to.
      security:
        - APIKey: []
      responses:
        200:
          description: group response
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /group/{id}/:
    get:
      description: |
        Returns a single forecast dataset group.
      security:
        - APIKey: []
      parameters:
        - name: id
          in: path
          description: ID of group to get metadata for
          required: true
          type: integer
      responses:
        200:
          description: group response
          schema:
              $ref: '#/definitions/Group'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/:
    get:
      description: |
        Returns metadata for all hindcast datasets that you have access to.
      security:
        - APIKey: []
      responses:
        200:
          description: dataset response
          schema:
            type: array
            items:
              $ref: '#/definitions/HindcastDataset'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/{name}/point/:
    get:
      produces:
        - application/json
      description: |
        Download data at one or more points for a single hindcast dataset.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/LocationsString"
      responses:
        200:
          description: File download
          schema:
            $ref: '#/definitions/PointFeatureCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      produces:
        - application/json
      description: |
        Download data at one or more points for a single hindcast dataset.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/LocationsString"
      responses:
        200:
          description: File download
          schema:
            $ref: '#/definitions/PointFeatureCollection'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - $ref: "#/parameters/Name"
      - $ref: "#/parameters/Zipped"
  /data/{name}/area/:
    get:
      produces:
        - application/octet-stream
        - application/json
      description: |
        Download a region (lon, lat, time bounded) for a single hindcast dataset in NetCDF format.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/Name"
        - $ref: "#/parameters/RegionString"
        - $ref: "#/parameters/StartDateTime"
        - $ref: "#/parameters/EndDateTime"
        - $ref: "#/parameters/FileName"
        - $ref: "#/parameters/Zipped"
      responses:
        200:
          description: File download
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/points/:
    get:
      produces:
        - application/json
      description: |
        Download data at one or more points for multiple hindcast datasets.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/LocationsString"
      responses:
        200:
          description: File download
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      produces:
        - application/json
      description: |
        Download data at one or more points for multiple hindcast datasets.
      security:
        - APIKey: []
      parameters:
        - $ref: "#/parameters/Locations"
      responses:
        200:
          description: File download
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    parameters:
      - name: name
        in: query
        description: Comma separated list of dataset names
        required: true
        type: string
      - $ref: "#/parameters/Zipped"
  /codes/:
    get:
      produces:
        - application/json
      description: |
        List all the available codes that Tidetech data uses for parameters, including names and units.
      responses:
        200:
          description: List of codes
          schema:
            type: array
            items:
              $ref: '#/definitions/Code'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /codes/{id}/:
    get:
      produces:
        - application/json
      description: |
        Describe details about a single code.
      parameters:
        - name: id
          in: path
          description: ID for the code (the code itself)
          required: true
          type: string
      responses:
        200:
          description: code response
          schema:
              $ref: '#/definitions/Code'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
parameters:
  Name:
    name: name
    in: path
    description: Name of the dataset
    required: true
    type: string
  FileFormat:
    name: file_format
    in: query
    description: Output file format
    required: true
    type: string
    enum: ['nc', 'grb']
  Zipped:
    name: zipped
    in: query
    description: Zip the file (bz2) before downloading
    required: false
    type: boolean
  TimeFrom:
    name: time_from
    in: query
    description: Time to slice dataset from
    required: false
    type: string
    format: date-time
  TimeTo:
    name: time_to
    in: query
    description: Time to slice dataset to
    required: false
    type: string
    format: date-time
  TimeSteps:
    name: time_steps
    in: query
    description: |
      Specific timesteps to select (1 is first), use comma separated string for many, e.g., '1,2,3,4'
    required: false
    type: string
  Codes:
    name: codes
    in: query
    description: |
      Select specific `codes`, comma separated string, e.g., '49,50'
    required: false
    type: string
  FileName:
    name: filename
    in: query
    description: Output file name
    required: false
    type: string
  NoRedirect:
    name: no_redirect
    in: query
    description: If set to True, this will stop any redirects to our external CDN
    required: false
    type: boolean
  BoundsString:
    name: bounds
    in: query
    description: Lat/lon bounds as a comma separated string in the order Lon-min, Lat-min, Lon-max, Lat-max 
    required: false
    type: string
  Locations:
    name: locations
    in: body
    description: GeoJSON string or object with datetime as parameter
    required: true
    schema:
      $ref: '#/definitions/PointFeatureCollection'
  Region:
    name: region
    in: body
    description: GeoJSON Polygon region
    required: true
    schema:
      $ref: '#/definitions/Polygon'
  LocationsString:
    name: locations
    in: query
    description: |
      GeoJSON FeatureCollection formatted as a string (see PointFeatureCollection object for definition)
      Here is an example string: `{"type": "FeatureCollection", "features": [{"type": "Feature", "geometry": {"type": "Point", "coordinates": [72.56617, 13.85252]}, "properties": {"id": "0", "datetime": "2016-01-30T22:30:00.000Z"}}]}`
      Note that this can also be a JSON object included in POST request, and can contain up to 10,000 points
    required: true
    type: string
    format: Location
  RegionString:
    name: region
    in: query
    description: |
      GeoJSON Polygon formatted as a string (see Polygon object for definition)
      Here is an example string: `{"type": "Polygon", "coordinates": [[[100, 10], [100, 12], [102, 12], [102, 10], [100, 10]]]}`
    required: true
    type: string
    format: Region
  StartDateTime:
    name: start_datetime
    in: query
    description: Datetime to select from in ISO format
    required: true
    type: string
    format: date-time
  EndDateTime:
    name: end_datetime
    in: query
    description: Datetime to select to in ISO format
    required: true
    type: string
    format: date-time
definitions:
  DatasetSummary:
    allOf:
      - required:
        - name
        properties:
          name:
            type: string
          url:
            type: string
  Dataset:
    allOf:
      - $ref: '#/definitions/DatasetSummary'
      - properties:
          id:
            type: integer
            format: int32
          title:
            type: string
          group:
            type: string
          description:
            type: string
          date_updated:
            type: string
            format: date-time
          data_url:
            type: string
            description: The URL for accessing this dataset to download or subset
          group_url:
            type: string
            description: The URL to access the group this dataset belongs to
          codes:
            type: array
            items:
              type: integer
          resolution_degrees:
            type: number
            format: float
          file_formats:
            type: array
            items:
              type: string
              description: Available data formats
              enum: ['grb', 'nc']
              uniqueItems: true
          file_size_zipped_grb: 
            type: string
            description: File size for the full GRIB zipped .bz2 file
          file_size_zipped_nc: 
            type: string
            description: File size for the full NetCDF zipped .bz2 file
          timeperiod_minutes:
            type: integer
            description: The period of time between timesteps in minutes
          timesteps:
            type: array
            description: A list of timesteps in UTC time and ISO format (YYYY-mm-ddTHH:MM:SSZ)
            items:
              type: string
              format: date-time
          geom:
            $ref: '#/definitions/Polygon'
  Group:
    allOf:
      - required:
        - id
        properties:
          id:
            type: integer
            format: int32
          name:
            type: string
          url:
            type: string
          datasets:
            type: array
            items:
              $ref: '#/definitions/DatasetSummary'
  Code:
    allOf:
      - properties:
          code:
            type: integer
            format: int32
          name:
            type: string
          description:
            type: string
          units:
            type: string
  HindcastDataset:
    allOf:
      - required:
        - name
        properties:
          name:
            type: string
          title:
            type: string
          url:
            type: string
            description: The URL that links to this datasets metadata
          codes:
            type: array
            items:
              type: integer
          resolution_degrees:
            type: number
            format: float
          first_timestep:
            type: string
            format: date-time
          last_timestep:
            type: string
            format: date-time
          timeperiod_minutes:
            type: integer
            description: The period between timesteps in minutes
          geometry:
            $ref: '#/definitions/Polygon'
  Point2D:
    type: array
    maxItems: 2
    minItems: 2
    items:
      type: number
  Polygon:
    type: object
    description: GeoJSon geometry
    discriminator: type
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - Point
        description: the geometry type
      coordinates:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/Point2D'
  PointGeometry:
    type: object
    description: GeoJSon geometry
    discriminator: type
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - Point
        description: the geometry type
      coordinates:
        $ref: '#/definitions/Point2D'
  Point:
    type: object
    description: GeoJSon geometry
    properties:
      geometry:
        $ref: "#/definitions/PointGeometry"
      properties:
        $ref: "#/definitions/GeometryProperties"
      type: 
        type: string
        enum:
        - Feature
        description: the geometry type
  PointFeatureCollection:
    type: object
    description: GeoJSon point feature collection
    required:
     - type
     - features
    properties:
      type:
        type: string
        enum: ['FeatureCollection']
      features:
          type: array
          items:
            $ref: '#/definitions/Point'
  GeometryProperties:
    type: object
    description: Propeties for geometry features
    properties:
      id:
        type: string
        description: Unique ID used to identify returned features
      datetime:
        type: string
        format: date-time
        description: |
          'Date-time to get values at. Use ISO format, i.e., YYYY-mm-ddTHH:MM:SS.000Z'
      codes:
        type: string
        description: Comma separated string of codes, leave blank for all
  Error:
    required:
      - detail
    properties:
      detail:
        type: string